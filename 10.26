1008 数组元素循环右移问题
一个数组A中存有N（N&gt0）个整数，在不允许使用另外数组的前提下，将每个整数循环向右移M（M>=0）个位置，即将A中的数据由（A~0~ A~1~……A~N-1~）变换为（A~N-M~ …… A~N-1~ A~0~ A~1~……A~N-M-1~）（最后M个数循环移至最前面的M个位置）。如果需要考虑程序移动数据的次数尽量少，要如何设计移动的方法？

输入格式：每个输入包含一个测试用例，第1行输入N ( 1<=N<=100)、M（M>=0）；第2行输入N个整数，之间用空格分隔。

输出格式：在一行中输出循环右移M位以后的整数序列，之间用空格分隔，序列结尾不能有多余空格。

from collections import deque
m = input().split()
m = int(m)
s = input()
q = deque(s.split())
q.rotate(m)
p = list(q)
for i in range(len(p)):
    if i == len(p)-1:
        print(p[i], end='')
    else:
        print(p[i], end=' ')
        
        
总结：使用了collections模块中的deque类的rotate方法。deque的用法与list相近并可使用相同的方法。rotate方法则是使从指定的项开始将其前移到序列开头

